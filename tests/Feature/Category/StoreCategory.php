<?php

namespace Tests\Feature\Category;

use App\Enums\RoleEnum;
use App\Models\Role;
use App\Models\User;
use Database\Seeders\RoleSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use server\model\Admin;
use Tests\TestCase;

class StoreCategory extends TestCase
{
    use RefreshDatabase;

    private string $url;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->url = route('category.store');
        $this->seed(RoleSeeder::class);
        $this->admin = Admin::factory()->create();
    }

    // test that only admin can add category
    public function test_only_admin_can_create_category() {
        $data = [
            'name' => fake()->name,
        ];
        $response = $this->actingAs($this->admin)->postJson($this->url, $data);

        $response->assertStatus(201);
        $response->assertJsonFragment(['name']);
    }

    // test that category name is not empty
    public function test_category_name_is_not_empty() {

    }

    // test that category is unique
    public function test_category_name_is_unique() {

    }

    // test public user cannot add category
    public function test_guests_cannot_create_category() {
        $response = $this->postJson($this->url);

        $response->assertUnauthorized();
    }
}
